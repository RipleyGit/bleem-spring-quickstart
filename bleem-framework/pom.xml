<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>site.bleem</groupId>
	<artifactId>bleem-framework</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>bleem-frame-work</name>
	<description>Demo project for Spring Boot</description>

<!--	<parent>-->
<!--		<groupId>org.springframework.boot</groupId>-->
<!--		<artifactId>spring-boot-starter-parent</artifactId>-->
<!--		<version>2.0.0.RELEASE</version>-->
<!--		<relativePath/> &lt;!&ndash; lookup parent from repository &ndash;&gt;-->
<!--	</parent>-->

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-boot.version>2.5.12</spring-boot.version>
		<spring-cloud.version>Hoxton.SR3</spring-cloud.version>
		<spring-cloud-alibaba.version>2.2.0.RELEASE</spring-cloud-alibaba.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<spring-boot-admin.version>2.2.2</spring-boot-admin.version>
		<hutool.version>5.2.5</hutool.version>
		<mybatis-plus.version>3.3.1</mybatis-plus.version>
		<dynamic-ds.version>3.0.0</dynamic-ds.version>
		<kaptcha.version>0.0.9</kaptcha.version>
		<velocity.version>1.7</velocity.version>
		<jasypt.version>2.1.0</jasypt.version>
		<fastjson.version>1.2.68</fastjson.version>
		<swagger.fox.version>2.9.2</swagger.fox.version>
		<swagger.core.version>1.5.24</swagger.core.version>
		<security.oauth.version>2.3.6.RELEASE</security.oauth.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--spring cloud alibaba-->
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring-cloud-alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--稳定版本，替代spring security bom内置-->
			<dependency>
				<groupId>org.springframework.security.oauth</groupId>
				<artifactId>spring-security-oauth2</artifactId>
				<version>${security.oauth.version}</version>
			</dependency>
			<!--swagger 最新依赖内置版本-->
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-models</artifactId>
				<version>${swagger.core.version}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger.core.version}</version>
			</dependency>
			<!--fastjson 版本-->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<!--web 模块-->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<!--排除tomcat依赖-->
					<exclusion>
						<artifactId>spring-boot-starter-tomcat</artifactId>
						<groupId>org.springframework.boot</groupId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<finalName>${project.name}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<configuration>
						<finalName>${project.build.finalName}</finalName>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
<!--				<plugin>-->
<!--					<groupId>io.fabric8</groupId>-->
<!--					<artifactId>docker-maven-plugin</artifactId>-->
<!--					<version>${docker.plugin.version}</version>-->
<!--					<configuration>-->
<!--						&lt;!&ndash; Docker Remote Api&ndash;&gt;-->
<!--						<dockerHost>${docker.host}</dockerHost>-->
<!--						&lt;!&ndash; Docker 镜像私服&ndash;&gt;-->
<!--						<registry>${docker.registry}</registry>-->
<!--						&lt;!&ndash; 认证信息&ndash;&gt;-->
<!--						<authConfig>-->
<!--							<push>-->
<!--								<username>${docker.username}</username>-->
<!--								<password>${docker.password}</password>-->
<!--							</push>-->
<!--						</authConfig>-->
<!--						<images>-->
<!--							<image>-->
<!--								<name>${docker.registry}/${docker.namespace}/${project.name}:${project.version}</name>-->
<!--								<build>-->
<!--									<dockerFile>${project.basedir}/Dockerfile</dockerFile>-->
<!--								</build>-->
<!--							</image>-->
<!--						</images>-->
<!--					</configuration>-->
<!--				</plugin>-->
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<version>2.2.5</version>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<!--阿里云主仓库，代理了maven central和jcenter仓库-->
		<repository>
			<id>aliyun</id>
			<name>aliyun</name>
			<url>https://maven.aliyun.com/repository/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<!-- 环境标识，需要与配置文件的名称相对应 -->
				<profiles.active>dev</profiles.active>
			</properties>
			<activation>
				<!-- 默认环境 -->
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
	</profiles>


	<modules>
<!--		<module>eureka-server</module>-->
<!--		<module>eureka-client</module>-->
<!--		<module>config-server</module>-->
<!--		<module>config-client</module>-->

		<module>bleem-core-starter</module>
		<module>bleem-logging-starter</module>
		<module>bleem-security-starter</module>
		<module>bleem-jdbc-starter</module>
		<module>bleem-cache-starter</module>
	</modules>

	<distributionManagement>
		<repository>
			<uniqueVersion>false</uniqueVersion>
			<id>TestWebApp_Repository</id>
			<name>TestWebApp Applications Repository Internal</name>
			<url>file://C:/Users/user/.m2/repository</url>
			<layout>default</layout>
		</repository>
		<snapshotRepository>
			<uniqueVersion>false</uniqueVersion>
			<id>TestWebApp_Repository</id>
			<name>TestWebApp Applications Repository Internal</name>
			<url>file://C:/Users/user/.m2/repository</url>
			<layout>default</layout>
		</snapshotRepository>
	</distributionManagement>
</project>
